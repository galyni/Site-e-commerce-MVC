@model SiteMVC.Produit

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>@Html.DisplayFor(model => model.Nom)</h4>
    <h6>Référence produit : @Html.DisplayFor(model => model.Id)</h6>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PrixUnitaire)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PrixUnitaire) euros
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Hauteur)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Hauteur) cm
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Longueur)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Longueur) cm
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Largeur)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Largeur) cm
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Poids)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Poids) kg
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Capacite)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Capacite) pièces
        </dd>
        <dt class="col-sm-2">
            <button type="button" class="btn btn-info" data-toggle="collapse" data-target="#description">
                @Html.DisplayNameFor(model => model.Description)
            </button>
        </dt>
        <dd class="col-sm-10">
            <div id="description" class="collapse in">
                @Html.DisplayFor(model => model.Description)
            </div>
        </dd>
    </dl>
</div>
@foreach (Photo photo in Model.Photo) {
    //string imageDataUrl = "";
    //string imageBase64 = Convert.ToBase64String(photo.Image);
    //imageDataUrl = string.Format("data:image/jpg;base64,{0}", imageBase64);
    string target = String.Concat("modalPhoto", photo.Id);

<div>
    <!--TODO : attributs liés à la modale directement dans la balise img + changement gestion photos-->
    <!--TODO : moins de chargement des photos ?-->

    <img class="thumbnail img-fluid rounded float-left" data-toggle="modal" data-target="#@target" src="@Url.Action("GetImage", "Photos", new { id = photo.Id })" />
</div>
    <div id="@target" class="modal fade" role="dialog">
        <div class="modal-dialog">
            Modal content
            <div class="modal-content">
                <div class="modal-body">
                    <img class="img-fluid rounded" src="@Url.Action("GetImage", "Photos", new { id = photo.Id })" />
                </div>
            </div>
        </div>
    </div>
}

<!-- TODO:affichage et acces conditionné aux droits -->
<div id="addToCart">
    <form method="post" asp-action="AddToCart" asp-controller="Panier" asp-route-id="@Model.Id">
        <div asp-validation-summary="All"></div>
        <div class="form-field">
            <label for="quantite">Quantité</label>
            <input type="number" min="1" max="@Model.Stock" id="quantite" name="quantite" required value="1"/>
            @{ 
                if(ViewBag.QuantiteActuelle != null) {
                    <p>Actuellement dans votre panier : @ViewBag.QuantiteActuelle</p>
                }
            }
        </div>
        <div class="form-field">
            <input type="submit" value="Ajouter au panier" />
        </div>
    </form>

    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>

<div id="listeAvis">
    @await Component.InvokeAsync("Avis", new { couleurId = Model.IdCouleur, produitId = Model.Id })
</div>

<div id="galerieSimilaires">
    @await Component.InvokeAsync("Galerie", new { couleurId = Model.IdCouleur, produitId = Model.Id } )
</div>